name: 🤖 Copilot Code Review Automation

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [develop, main]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  copilot-review-setup:
    name: 🧠 Setup Copilot Review
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    timeout-minutes: 10
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔍 Quick PR Template Check
        run: |
          if echo "${{ github.event.pull_request.body }}" | grep -q "## 📋 Description"; then
            echo "✅ PR follows template structure"
          else
            echo "⚠️ PR template may be incomplete"
          fi

      - name: � Add Copilot Review Comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const comment = `## 🤖 Copilot Automated Review Setup

            Hi! I'm reviewing this PR based on the AnimeBOX project standards.

            ### 📋 Review Checklist
            - TypeScript strict typing and compilation
            - React Native mobile best practices  
            - Drizzle ORM type-safe database operations
            - Testing coverage for new functionality
            - Performance and accessibility considerations

            ### 🎯 Focus Areas
            I'll provide detailed feedback on code quality, architecture, and best practices.

            ---
            *Following [Copilot Instructions](.github/copilot-instructions.md) for consistent reviews.*`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: comment
            });

  enforce-quality-checks:
    name: 🛡️ Quality Gate Enforcement
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: 📦 Install dependencies
        run: yarn install --immutable

      - name: 🔍 TypeScript Check
        run: |
          echo "🔍 Running TypeScript compilation check..."
          yarn type-check
          echo "✅ TypeScript check passed"

      - name: 🎨 ESLint Check
        run: |
          echo "🎨 Running ESLint..."
          yarn lint
          echo "✅ ESLint check passed"

      - name: 🧪 Test Suite
        run: |
          echo "🧪 Running test suite..."
          yarn test --coverage --watchAll=false
          echo "✅ All tests passed"

      - name: 📝 Markdown Lint Check
        run: |
          echo "📝 Checking markdown documentation..."
          if ls docs/**/*.md .github/**/*.md 1> /dev/null 2>&1; then
            yarn markdownlint docs/**/*.md .github/**/*.md
            echo "✅ Markdown linting passed"
          else
            echo "ℹ️ No markdown files to check"
          fi

      - name: 📊 Quality Gate Summary
        run: |
          echo "## ✅ Quality Gate Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All automated quality checks have passed:" >> $GITHUB_STEP_SUMMARY
          echo "- 🔍 TypeScript compilation: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          echo "- 🎨 ESLint (code style): ✅ Passed" >> $GITHUB_STEP_SUMMARY
          echo "- 🧪 Test suite: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          echo "- 📝 Markdown linting: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "This PR meets the technical quality standards for merge consideration." >> $GITHUB_STEP_SUMMARY
